# source: http://localhost:5000/graphql
# timestamp: Sat Jun 22 2019 01:25:28 GMT+0100 (British Summer Time)

type CloneTicket {
  ok: Boolean!
  ticket: Ticket!
}

type CreateTicket {
  ok: Boolean!
  ticket: Ticket!
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

type DeleteTicket {
  ok: Boolean!
}

"""
The abstract base history item type. All history items must have an appropriate timestamp.
Additional fields can be provided by the class that implements this interface.
"""
interface HistoryItem {
  timestamp: DateTime!
}

type Mutation {
  createTicket(name: String!, description: String!): CreateTicket
  renameTicket(id: ID!, name: String!): RenameTicket
  cloneTicket(id: ID!): CloneTicket
  deleteTicket(id: ID!): DeleteTicket
  updateTicketDescription(id: ID!, description: String!): UpdateTicketDescription
}

type Query {
  ticket(id: ID!): Ticket
  tickets: [Ticket!]!
}

type RenameTicket {
  ok: Boolean!
}

type Ticket {
  id: ID!
  name: String
  description: String
  updatedAt: DateTime!
  history: [HistoryItem!]!
}

type TicketCloned implements HistoryItem {
  timestamp: DateTime!
  field: String!
  originalTicketId: String
  originalTicketName: String
}

type TicketFieldUpdated implements HistoryItem {
  timestamp: DateTime!
  field: String!
  oldValue: String
  newValue: String
}

type UpdateTicketDescription {
  ok: Boolean!
}
